import Prelude

import Color

import TextStyle

enum TextAlign {
  case left()
  case center()
  case right()
}

enum DimensionSize {
  case fixed(Number)
  case flexible()
}

struct Padding {
  let top: Number = 0
  let right: Number = 0
  let bottom: Number = 0
  let left: Number = 0
}

extension Padding {
  func size(value: Number) -> Padding {
    return Padding(top: value, right: value, bottom: value, left: value)
  }
}

enum ElementParameter {
  case boolean(String, Boolean)
  case number(String, Number)
  case string(String, String)
  case color(String, Color)
  case textStyle(String, TextStyle)
  case elements(String, Array<Element>)
  case textAlign(String, TextAlign)
  case dimension(String, DimensionSize)
  case padding(String, Padding)
}

struct Element {
  let type: String = ""
  let parameters: Array<ElementParameter> = [

  ]
}

func View(__name: String, width: DimensionSize, height: DimensionSize, padding: Padding, backgroundColor: Color, children: Array<Element>) -> Element {
  return Element(type: "LonaView", parameters: [
    ElementParameter.color("backgroundColor", backgroundColor),
    ElementParameter.elements("children", children),
    ElementParameter.dimension("width", width),
    ElementParameter.dimension("height", height),
    ElementParameter.padding("padding", padding)
  ])
}

func Text(__name: String, value: String, style: TextStyle, alignment: TextAlign) -> Element {
  return Element(type: "LonaText", parameters: [
    ElementParameter.string("value", value),
    ElementParameter.textStyle("style", style),
    ElementParameter.textAlign("textAlign", alignment)
  ])
}

func VerticalStack(children: Array<Element>) -> Element {
  return Element(type: "LonaView", parameters: [
    ElementParameter.elements("children", children),
    ElementParameter.string("flexDirection", "column")
  ])
}

func HorizontalStack(children: Array<Element>) -> Element {
  return Element(type: "LonaView", parameters: [
    ElementParameter.elements("children", children),
    ElementParameter.string("flexDirection", "row")
  ])
}